- alias: Flux - Charge
  description: >-
    At just before 3pm, this automation charges the batteries to the % SoC defined in "Flux Charge SoC" before the 
    expensive import rate from 4-7pm.
  trigger:
    - platform: time
      at: "14:59:00"
  condition:
    - condition: numeric_state
      entity_id: sensor.solax_battery_capacity
      below: input_number.flux_charge_soc
  action:
    - parallel:
        - service: select.select_option
          data:
            option: "15:00"
          target:
            entity_id: select.solax_charger_start_time_2
        - service: select.select_option
          data:
            option: "16:00"
          target:
            entity_id: select.solax_charger_end_time_2
  mode: single

- alias: Flux - Charge Cutout
  description: >-
    Monitors battery SoC when Flux - Charge automation running.  Stops charge when battery reaches % set in 
    "Flux Charge SoC". Resets Charge start and end time to 15:00
  trigger:
    - platform: numeric_state
      entity_id: sensor.solax_battery_capacity
      above: input_number.flux_charge_soc
  condition:
    - condition: time
      after: "15:00:00"
      before: "16:00:00"
  action:
    - parallel:
        - service: select.select_option
          data:
            option: "15:00"
          target:
            entity_id: select.solax_charger_start_time_2
        - service: select.select_option
          data:
            option: "15:00"
          target:
            entity_id: select.solax_charger_end_time_2
  mode: single

- alias: Flux - Discharge Cutout
  description: >-
    Stops Flux battery discharging if the remaining SoC drops to 50% between the
    hours of 16:00 and 19:00 with Flux discharging enabled
  trigger:
    - platform: numeric_state
      entity_id: sensor.solax_battery_capacity
      below: input_number.flux_discharge_cutout_soc
  condition:
    - condition: time
      after: "16:00:00"
      before: "19:00:00"
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
    - condition: state
      entity_id: input_boolean.flux_discharge
      state: "on"
    - condition: state
      entity_id: select.solax_charger_use_mode
      state: "Manual Mode"
  action:
    - service: select.select_option
      data:
        option: "Self Use Mode"
      target:
        entity_id: select.solax_charger_use_mode
  mode: single

- alias: Flux - Discharge
  description: ->
    Sets inverter to manual mode and enables force discharge at 16:01 when flux_discharge is set to on in dashboard.  
    A separate automation "Flux - Discharge Cutout" monitors the force discharge and sets the inverter to "self use" 
    when batter SoC is below a defined value
  trigger:
    - platform: time
      at: "16:01:00"
  condition:
    - condition: state
      entity_id: input_boolean.flux_discharge
      state: "on"
    - condition: state
      entity_id: select.solax_charger_use_mode
      state: "Self Use Mode"
    - condition: numeric_state
      entity_id: sensor.solax_battery_capacity
      above: input_number.flux_discharge_cutout_soc
  action:
    - parallel:
        - service: select.select_option
          data:
            option: "Manual Mode"
          target:
            entity_id: select.solax_charger_use_mode
        - service: select.select_option
          data:
            option: "Force Discharge"
          target:
            entity_id: select.solax_manual_mode_select
  mode: single

- alias: Utility Meter - Set Flux (AM)
  description: ""
  trigger:
    - platform: time
      at: "05:00:00"
      variables:
        tariff: peak
  condition: []
  action:
    - service: select.select_option
      data:
        option: Flux
      target:
        entity_id:
          - select.octopus_flux_tariff
          - select.octopus_flux_export_tariff
  mode: single

- alias: Utility Meter - Set Flux (PM)
  description: ""
  trigger:
    - platform: time
      at: "19:00:00"
      variables:
        tariff: peak
  condition: []
  action:
    - service: select.select_option
      data:
        option: Flux
      target:
        entity_id:
          - select.octopus_flux_tariff
          - select.octopus_flux_export_tariff
  mode: single

- alias: Utility Meter - Set Offpeak
  description: ""
  trigger:
    - platform: time
      at: "02:00:00"
      variables:
        tariff: peak
  action:
    - service: select.select_option
      data:
        option: Offpeak
      target:
        entity_id:
          - select.octopus_flux_tariff
          - select.octopus_flux_export_tariff
  mode: single

- alias: Utility Meter - Set Peak
  description: ""
  trigger:
    - platform: time
      at: "16:00:00"
      variables:
        tariff: peak
  condition: []
  action:
    - service: select.select_option
      data:
        option: Peak
      target:
        entity_id:
          - select.octopus_flux_tariff
          - select.octopus_flux_export_tariff
  mode: single

- alias: Flux - Prevent Battery Discharge
  description: >-
    Monitors battery SoC when in the flux period before peak. Stops discharge of
    the battery when 1% below threshold  to avoid having to charge up before peak
    period adding load to the battery and losing energy due to inefficiencies in
    charging/discharge cycles and better spread of demand to. Will not act if
    already a remote control running to allow for manual override and its not a
    saving session day. If it is a saving session day then will only kick in when
    the power is above the saving session desired state of charge, this assumes
    that another automation has kicked of a charge and this is responsible for
    stopping it when it reached the given point. The charge/discharge during
    saving sessions will only kick in when the actvie power is above 0 (so
    charging) in order to prevent it stopping the discharge
  trigger:
    - platform: time_pattern
      minutes: /15
    - platform: numeric_state
      entity_id: sensor.solax_battery_capacity
      below: input_number.flux_charge_soc
  condition:
    - condition: or
      conditions:
        - condition: and
          conditions:
            - condition: time
              after: "05:00:00"
              before: "16:59:00"
            - condition: state
              entity_id: sensor.octopus_energy_saving_session_today
              state: "True"
            - condition: numeric_state
              entity_id: sensor.solax_battery_capacity
              value_template: "{{states('sensor.solax_battery_capacity')| float(0) }}"
              above: input_number.saving_session_desired_battery_soc
            - condition: numeric_state
              entity_id: number.solax_remotecontrol_active_power
              above: 0
        - condition: and
          conditions:
            - condition: time
              after: "05:00:00"
              before: "16:00:00"
            - condition: numeric_state
              entity_id: sensor.solax_battery_capacity
              value_template: "{{states('sensor.solax_battery_capacity')| float(0) }}"
              below: input_number.flux_charge_soc
            - condition: numeric_state
              entity_id: sensor.solax_remotecontrol_autorepeat_remaining
              below: 1
  action:
    - service: select.select_option
      data:
        option: Enabled No Discharge
      target:
        entity_id: select.solax_remotecontrol_power_control
    - service: number.set_value
      data:
        value: >-
          {% set target= (as_timestamp(now().replace(hour=15, minute=59, second
          =00) ) - as_timestamp(now()))|round(1)|int %} {{ ([28800, target] |
          sort)[0] }}
      target:
        entity_id: number.solax_remotecontrol_autorepeat_duration
    - service: button.press
      data: {}
      target:
        entity_id: button.solax_remotecontrol_trigger
  mode: single


- alias: Flux - Re-enable Battery Discharge
  description: >-
    Monitors battery SoC when in the flux period before peak. Restarts discharge
    of the battery when 1% above threshold  this is where the battery level has
    dropped to a level where it pauses discharge until peak but then energy is
    input into the battery likley from PV so can restart discharge. Should be -1
    for 2% change
  trigger:
    - platform: time_pattern
      minutes: /15
    - platform: numeric_state
      entity_id: sensor.solax_battery_capacity
      value_template: "{{states('sensor.solax_battery_capacity')| float(0) }}"
      above: input_number.flux_charge_soc
  condition:
    - condition: time
      after: "05:00:00"
      before: "16:00:00"
    - condition: numeric_state
      entity_id: sensor.solax_battery_capacity
      value_template: "{{states('sensor.solax_battery_capacity')| float(0) }}"
      above: input_number.flux_charge_soc
    - condition: numeric_state
      entity_id: sensor.solax_remotecontrol_autorepeat_remaining
      below: 1
    - condition: state
      entity_id: sensor.octopus_energy_saving_session_today
      state: "False"
  action:
    - service: select.select_option
      data:
        option: Disabled
      target:
        entity_id: select.solax_remotecontrol_power_control
    - service: number.set_value
      data:
        value: 30
      target:
        entity_id: number.solax_remotecontrol_autorepeat_duration
    - service: button.press
      data: {}
      target:
        entity_id: button.solax_remotecontrol_trigger
  mode: single
