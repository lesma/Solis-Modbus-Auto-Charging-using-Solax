- alias: Solar - Battery Charge Automation
  description: Main automatic battery charging function
  trigger:
    - platform: time
      at: "23:55:00"
  condition: []
  action:
    - service: input_number.set_value
      data:
        value: "{{ states('sensor.house_load_today') }}"
      target:
        entity_id: input_number.expected_consumption
    - delay:
        hours: 0
        minutes: 0
        seconds: 10
        milliseconds: 0
    - service: select.select_option
      data:
        option: "{{ states('sensor.soc_charge_end_time_hhmm') }}"
      target:
        entity_id: select.solax_charger_end_time_1
  mode: single

- alias: "Solar - Daily Sync RTC "
  description: Synchronises the Inverter clock with HA once per day
  trigger:
    - platform: time
      at: "22:05:00"
  condition: []
  action:
    - service: button.press
      data: {}
      target:
        entity_id: button.solax_sync_rtc
  mode: single

- alias: Solar - Expected Consumption Low State Tracker
  description: >-
    If the number input number 'Expected Consumption' is overtaken by the Solis
    sensor 'Solax House Load Today', the value from the sensor is set to the
    number input to avoid peculiarities in battery SoC forecasting.
  trigger:
    - platform: state
      entity_id:
        - sensor.house_load_today
  condition:
    - condition: numeric_state
      entity_id: sensor.house_load_today
      above: input_number.expected_consumption
  action:
    - service: input_number.set_value
      data:
        value: "{{ states('sensor.house_load_today') }}"
      target:
        entity_id: input_number.expected_consumption
  mode: single

- alias: "Solar - Expected Consumption Today : Updater"
  description: >-
    Updates todays expected consumption every hour after midday by dividing house
    load today by the hour and then multiplying by 24
  trigger:
    - platform: time_pattern
      minutes: "1"
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
        - sun
      after: "12:00:00"
      before: "23:02:00"
  action:
    - service: input_number.set_value
      data:
        value: "{{ states('sensor.house_load_today_forecast') }}"
      target:
        entity_id: input_number.expected_consumption
  mode: single

- alias: Solar - Restore Consumption Defaults
  description: >-
    Sets todays expected consumption and tomorrows expected consumption to 10,
    Target SoC to 4.5, base load to 0.24, and boost charge to 0
  trigger:
    - platform: state
      entity_id:
        - input_button.reset_consumption_defaults
  condition: [ ]
  action:
    - service: input_number.set_value
      data:
        value: 12
      target:
        entity_id: input_number.expected_consumption
    - service: input_number.set_value
      data:
        value: 12
      target:
        entity_id: input_number.expected_consumption_tomorrow
    - service: input_number.set_value
      data:
        value: 4.5
      target:
        entity_id: input_number.target_usable_soc
    - service: input_number.set_value
      data:
        value: 0.24
      target:
        entity_id: input_number.background_load
    - service: input_number.set_value
      data:
        value: 0
      target:
        entity_id: input_number.boost_charge
    - service: number.set_value
      data:
        value: "55"
      target:
        entity_id: number.solax_timed_charge_current
    - service: input_number.set_value
      data:
        value: 10
      target:
        entity_id: input_number.battery_capacity
    - service: input_number.set_value
      data:
        value: 10
      target:
        entity_id: input_number.force_charge_soc
    - service: input_number.set_value
      data:
        value: 15
      target:
        entity_id: input_number.overdischarge_soc
  mode: single

- alias: Solar - Update Times
  description: >-
    Manually updates Inverter Charge and Discharge Times from Solax Modbus
    Integration
  trigger: [ ]
  condition: [ ]
  action:
    - parallel:
        - service: number.set_value
          data:
            value: "{{ states('sensor.soc_charge_end_time_hhmm').split(':')[0] }}"
          target:
            entity_id: number.solax_timed_charge_end_hours
        - service: number.set_value
          data:
            value: "{{ states('sensor.soc_charge_end_time_hhmm').split(':')[1] }}"
          target:
            entity_id: number.solax_timed_charge_end_minutes
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
    - service: button.press
      data: { }
      target:
        entity_id:
          - button.solax_update_charge_discharge_times
  mode: single
